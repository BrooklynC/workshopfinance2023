<<<<<<< HEAD
{"version":3,"sources":["../src/merge.ts"],"names":["merge","x","y","arrayMerge","_destinationArray","sourceArray"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA;AACA;AACA;AACA;AACe,SAASA,KAAT,CAAqBC,CAArB,EAA2BC,CAA3B,EAAiC;AAC9C,SAAO,0BAAUD,CAAV,EAAaC,CAAb,EAAgB;AACrBC,IAAAA,UAAU,EAAE,CAACC,iBAAD,EAA2BC,WAA3B,KACVA;AAFmB,GAAhB,CAAP;AAID","sourcesContent":["import deepmerge from 'deepmerge';\n\n/**\n * `deepmerge` concatenates arrays by default instead of overwriting them.\n * We define custom merging function for arrays to change that behaviour\n */\nexport default function merge<X, Y>(x: X, y: Y) {\n  return deepmerge(x, y, {\n    arrayMerge: (_destinationArray: any[], sourceArray: any[]): any[] =>\n      sourceArray,\n  });\n}\n"]}
=======
{"version":3,"names":["merge","x","y","deepmerge","arrayMerge","_destinationArray","sourceArray"],"sources":["../src/merge.ts"],"sourcesContent":["import deepmerge from 'deepmerge';\n\n/**\n * `deepmerge` concatenates arrays by default instead of overwriting them.\n * We define custom merging function for arrays to change that behaviour\n */\nexport default function merge<X, Y>(x: X, y: Y) {\n  return deepmerge(x, y, {\n    arrayMerge: (_destinationArray: any[], sourceArray: any[]): any[] =>\n      sourceArray,\n  });\n}\n"],"mappings":";;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAkC;AAElC;AACA;AACA;AACA;AACe,SAASA,KAAK,CAAOC,CAAI,EAAEC,CAAI,EAAE;EAC9C,OAAO,IAAAC,oBAAS,EAACF,CAAC,EAAEC,CAAC,EAAE;IACrBE,UAAU,EAAE,CAACC,iBAAwB,EAAEC,WAAkB,KACvDA;EACJ,CAAC,CAAC;AACJ"}
>>>>>>> zen
