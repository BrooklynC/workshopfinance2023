<<<<<<< HEAD
{"version":3,"sources":["../../../src/tools/healthchecks/common.ts"],"names":["logMessage","message","indentation","logger","log","messageByLine","split","join","addBlankLine","logManualInstallation","healthcheck","url","command","chalk","dim","underline","bold","logError","loader","error","fail","calculateMessageSize","Math","max","ceil","process","stdout","columns","removeMessage","readline","moveCursor","clearScreenDown"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAGA;AACA,MAAMA,UAAU,GAAIC,OAAD,IAAsB;AACvC,QAAMC,WAAW,GAAG,KAApB;;AAEA,MAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAC/BE,uBAAOC,GAAP;;AAEA;AACD;;AAED,QAAMC,aAAa,GAAGJ,OAAO,CAACK,KAAR,CAAc,IAAd,CAAtB;AAEA,SAAOH,mBAAOC,GAAP,CAAY,GAAEF,WAAY,GAAEG,aAAa,CAACE,IAAd,CAAoB,KAAIL,WAAY,EAApC,CAAuC,EAAnE,CAAP;AACD,CAZD;;;;AAcA,MAAMM,YAAY,GAAG,MAAMR,UAAU,EAArC;;AAEA,MAAMS,qBAAqB,GAAG,CAAC;AAC7BC,EAAAA,WAD6B;AAE7BC,EAAAA,GAF6B;AAG7BC,EAAAA,OAH6B;AAI7BX,EAAAA;AAJ6B,CAAD,KAUxB;AACJ,MAAIA,OAAJ,EAAa;AACX,WAAOD,UAAU,CAACC,OAAD,CAAjB;AACD;;AAED,MAAIU,GAAJ,EAAS;AACPX,IAAAA,UAAU,CACP,mCAAkCU,WAAY,OAAMG,iBAAMC,GAAN,CAAUC,SAAV,CACnDJ,GADmD,CAEnD,EAHM,CAAV;AAMA;AACD;;AAED,MAAIC,OAAJ,EAAa;AACXZ,IAAAA,UAAU,CACP,kBAAiBU,WAAY,eAAcG,iBAAMG,IAAN,CAAWJ,OAAX,CAAoB,EADxD,CAAV;AAGD;AACF,CA9BD;;;;AAgCA,MAAMK,QAAQ,GAAG,CAAC;AAChBP,EAAAA,WADgB;AAEhBQ,EAAAA,MAFgB;AAGhBC,EAAAA,KAHgB;AAIhBlB,EAAAA,OAJgB;AAKhBW,EAAAA;AALgB,CAAD,KAYX;AACJ,MAAIM,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACE,IAAP;AACD;;AAEDZ,EAAAA,YAAY;AAEZR,EAAAA,UAAU,CAACa,iBAAMC,GAAN,CAAUK,KAAK,CAAClB,OAAhB,CAAD,CAAV;;AAEA,MAAIA,OAAJ,EAAa;AACXD,IAAAA,UAAU,CAACC,OAAD,CAAV;AACAO,IAAAA,YAAY;AAEZ;AACD;;AAEDR,EAAAA,UAAU,CACP,mDAAkDU,WAAY,gCAA+BG,iBAAMG,IAAN,CAC5FJ,OAD4F,CAE5F,EAHM,CAAV;AAKAJ,EAAAA,YAAY;AACb,CAlCD,C,CAoCA;;;;;AACA,SAASa,oBAAT,CAA8BpB,OAA9B,EAA+C;AAC7C,SAAOqB,IAAI,CAACC,GAAL,CACL,CADK,EAELD,IAAI,CAACE,IAAL,CAAU,wBAAQ,0BAAUvB,OAAV,CAAR,KAA+BwB,OAAO,CAACC,MAAR,CAAeC,OAAf,IAA0B,EAAzD,CAAV,CAFK,CAAP;AAID,C,CAED;;;AACA,SAASC,aAAT,CAAuB3B,OAAvB,EAAwC;AACtC4B,sBAASC,UAAT,CAAoBL,OAAO,CAACC,MAA5B,EAAoC,CAApC,EAAuC,CAACL,oBAAoB,CAACpB,OAAD,CAA5D;;AACA4B,sBAASE,eAAT,CAAyBN,OAAO,CAACC,MAAjC;AACD","sourcesContent":["import chalk from 'chalk';\nimport readline from 'readline';\nimport wcwidth from 'wcwidth';\nimport stripAnsi from 'strip-ansi';\nimport {logger} from '@react-native-community/cli-tools';\nimport {Loader} from '../../types';\n\n// Space is necessary to keep correct ordering on screen\nconst logMessage = (message?: string) => {\n  const indentation = '   ';\n\n  if (typeof message !== 'string') {\n    logger.log();\n\n    return;\n  }\n\n  const messageByLine = message.split('\\n');\n\n  return logger.log(`${indentation}${messageByLine.join(`\\n${indentation}`)}`);\n};\n\nconst addBlankLine = () => logMessage();\n\nconst logManualInstallation = ({\n  healthcheck,\n  url,\n  command,\n  message,\n}: {\n  healthcheck?: string;\n  url?: string;\n  command?: string;\n  message?: string;\n}) => {\n  if (message) {\n    return logMessage(message);\n  }\n\n  if (url) {\n    logMessage(\n      `Read more about how to download ${healthcheck} at ${chalk.dim.underline(\n        url,\n      )}`,\n    );\n\n    return;\n  }\n\n  if (command) {\n    logMessage(\n      `Please install ${healthcheck} by running ${chalk.bold(command)}`,\n    );\n  }\n};\n\nconst logError = ({\n  healthcheck,\n  loader,\n  error,\n  message,\n  command,\n}: {\n  healthcheck: string;\n  loader?: Loader;\n  error: Error;\n  message?: string;\n  command: string;\n}) => {\n  if (loader) {\n    loader.fail();\n  }\n\n  addBlankLine();\n\n  logMessage(chalk.dim(error.message));\n\n  if (message) {\n    logMessage(message);\n    addBlankLine();\n\n    return;\n  }\n\n  logMessage(\n    `The error above occured while trying to install ${healthcheck}. Please try again manually: ${chalk.bold(\n      command,\n    )}`,\n  );\n  addBlankLine();\n};\n\n// Calculate the size of a message on terminal based on rows\nfunction calculateMessageSize(message: string) {\n  return Math.max(\n    1,\n    Math.ceil(wcwidth(stripAnsi(message)) / (process.stdout.columns || 80)),\n  );\n}\n\n// Clear the message from the terminal\nfunction removeMessage(message: string) {\n  readline.moveCursor(process.stdout, 0, -calculateMessageSize(message));\n  readline.clearScreenDown(process.stdout);\n}\n\nexport {logMessage, logManualInstallation, logError, removeMessage};\n"]}
=======
{"version":3,"names":["logMessage","message","indentation","logger","log","messageByLine","split","join","addBlankLine","logManualInstallation","healthcheck","url","command","chalk","dim","underline","bold","logError","loader","error","fail","calculateMessageSize","Math","max","ceil","wcwidth","stripAnsi","process","stdout","columns","removeMessage","readline","moveCursor","clearScreenDown"],"sources":["../../../src/tools/healthchecks/common.ts"],"sourcesContent":["import chalk from 'chalk';\nimport readline from 'readline';\nimport wcwidth from 'wcwidth';\nimport stripAnsi from 'strip-ansi';\nimport {logger} from '@react-native-community/cli-tools';\nimport {Loader} from '../../types';\n\n// Space is necessary to keep correct ordering on screen\nconst logMessage = (message?: string) => {\n  const indentation = '   ';\n\n  if (typeof message !== 'string') {\n    logger.log();\n\n    return;\n  }\n\n  const messageByLine = message.split('\\n');\n\n  return logger.log(`${indentation}${messageByLine.join(`\\n${indentation}`)}`);\n};\n\nconst addBlankLine = () => logMessage();\n\nconst logManualInstallation = ({\n  healthcheck,\n  url,\n  command,\n  message,\n}: {\n  healthcheck?: string;\n  url?: string;\n  command?: string;\n  message?: string;\n}) => {\n  if (message) {\n    return logMessage(message);\n  }\n\n  if (url) {\n    logMessage(\n      `Read more about how to download ${healthcheck} at ${chalk.dim.underline(\n        url,\n      )}`,\n    );\n\n    return;\n  }\n\n  if (command) {\n    logMessage(\n      `Please install ${healthcheck} by running ${chalk.bold(command)}`,\n    );\n  }\n};\n\nconst logError = ({\n  healthcheck,\n  loader,\n  error,\n  message,\n  command,\n}: {\n  healthcheck: string;\n  loader?: Loader;\n  error: Error;\n  message?: string;\n  command: string;\n}) => {\n  if (loader) {\n    loader.fail();\n  }\n\n  addBlankLine();\n\n  logMessage(chalk.dim(error.message));\n\n  if (message) {\n    logMessage(message);\n    addBlankLine();\n\n    return;\n  }\n\n  logMessage(\n    `The error above occured while trying to install ${healthcheck}. Please try again manually: ${chalk.bold(\n      command,\n    )}`,\n  );\n  addBlankLine();\n};\n\n// Calculate the size of a message on terminal based on rows\nfunction calculateMessageSize(message: string) {\n  return Math.max(\n    1,\n    Math.ceil(wcwidth(stripAnsi(message)) / (process.stdout.columns || 80)),\n  );\n}\n\n// Clear the message from the terminal\nfunction removeMessage(message: string) {\n  readline.moveCursor(process.stdout, 0, -calculateMessageSize(message));\n  readline.clearScreenDown(process.stdout);\n}\n\nexport {logMessage, logManualInstallation, logError, removeMessage};\n"],"mappings":";;;;;;;AAAA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AACA;EAAA;EAAA;IAAA;EAAA;EAAA;AAAA;AAAyD;AAGzD;AACA,MAAMA,UAAU,GAAIC,OAAgB,IAAK;EACvC,MAAMC,WAAW,GAAG,KAAK;EAEzB,IAAI,OAAOD,OAAO,KAAK,QAAQ,EAAE;IAC/BE,kBAAM,CAACC,GAAG,EAAE;IAEZ;EACF;EAEA,MAAMC,aAAa,GAAGJ,OAAO,CAACK,KAAK,CAAC,IAAI,CAAC;EAEzC,OAAOH,kBAAM,CAACC,GAAG,CAAE,GAAEF,WAAY,GAAEG,aAAa,CAACE,IAAI,CAAE,KAAIL,WAAY,EAAC,CAAE,EAAC,CAAC;AAC9E,CAAC;AAAC;AAEF,MAAMM,YAAY,GAAG,MAAMR,UAAU,EAAE;AAEvC,MAAMS,qBAAqB,GAAG,CAAC;EAC7BC,WAAW;EACXC,GAAG;EACHC,OAAO;EACPX;AAMF,CAAC,KAAK;EACJ,IAAIA,OAAO,EAAE;IACX,OAAOD,UAAU,CAACC,OAAO,CAAC;EAC5B;EAEA,IAAIU,GAAG,EAAE;IACPX,UAAU,CACP,mCAAkCU,WAAY,OAAMG,gBAAK,CAACC,GAAG,CAACC,SAAS,CACtEJ,GAAG,CACH,EAAC,CACJ;IAED;EACF;EAEA,IAAIC,OAAO,EAAE;IACXZ,UAAU,CACP,kBAAiBU,WAAY,eAAcG,gBAAK,CAACG,IAAI,CAACJ,OAAO,CAAE,EAAC,CAClE;EACH;AACF,CAAC;AAAC;AAEF,MAAMK,QAAQ,GAAG,CAAC;EAChBP,WAAW;EACXQ,MAAM;EACNC,KAAK;EACLlB,OAAO;EACPW;AAOF,CAAC,KAAK;EACJ,IAAIM,MAAM,EAAE;IACVA,MAAM,CAACE,IAAI,EAAE;EACf;EAEAZ,YAAY,EAAE;EAEdR,UAAU,CAACa,gBAAK,CAACC,GAAG,CAACK,KAAK,CAAClB,OAAO,CAAC,CAAC;EAEpC,IAAIA,OAAO,EAAE;IACXD,UAAU,CAACC,OAAO,CAAC;IACnBO,YAAY,EAAE;IAEd;EACF;EAEAR,UAAU,CACP,mDAAkDU,WAAY,gCAA+BG,gBAAK,CAACG,IAAI,CACtGJ,OAAO,CACP,EAAC,CACJ;EACDJ,YAAY,EAAE;AAChB,CAAC;;AAED;AAAA;AACA,SAASa,oBAAoB,CAACpB,OAAe,EAAE;EAC7C,OAAOqB,IAAI,CAACC,GAAG,CACb,CAAC,EACDD,IAAI,CAACE,IAAI,CAAC,IAAAC,kBAAO,EAAC,IAAAC,oBAAS,EAACzB,OAAO,CAAC,CAAC,IAAI0B,OAAO,CAACC,MAAM,CAACC,OAAO,IAAI,EAAE,CAAC,CAAC,CACxE;AACH;;AAEA;AACA,SAASC,aAAa,CAAC7B,OAAe,EAAE;EACtC8B,mBAAQ,CAACC,UAAU,CAACL,OAAO,CAACC,MAAM,EAAE,CAAC,EAAE,CAACP,oBAAoB,CAACpB,OAAO,CAAC,CAAC;EACtE8B,mBAAQ,CAACE,eAAe,CAACN,OAAO,CAACC,MAAM,CAAC;AAC1C"}
>>>>>>> zen
