const babel = require("./babel-core");
<<<<<<< HEAD
=======
<<<<<<< HEAD

=======
>>>>>>> zen
>>>>>>> ede5c2d510e1c4029dfffa203387bb3f20d74fc6
const {
  setOptions,
  transform,
  transformSync
} = require("./transform");
<<<<<<< HEAD
=======
<<<<<<< HEAD

=======
>>>>>>> zen
>>>>>>> ede5c2d510e1c4029dfffa203387bb3f20d74fc6
module.exports = function handleMessage(action, payload) {
  switch (action) {
    case "GET_DEFAULT_EXTENSIONS":
      return babel.DEFAULT_EXTENSIONS;
<<<<<<< HEAD
=======
<<<<<<< HEAD

>>>>>>> ede5c2d510e1c4029dfffa203387bb3f20d74fc6
    case "SET_OPTIONS":
      setOptions(payload);
      return;
    case "TRANSFORM":
      return transform(payload.code, payload.filename);
<<<<<<< HEAD
=======

=======
    case "SET_OPTIONS":
      setOptions(payload);
      return;
    case "TRANSFORM":
      return transform(payload.code, payload.filename);
>>>>>>> zen
>>>>>>> ede5c2d510e1c4029dfffa203387bb3f20d74fc6
    case "TRANSFORM_SYNC":
      {
        return transformSync(payload.code, payload.filename);
      }
  }
<<<<<<< HEAD
  throw new Error(`Unknown internal parser worker action: ${action}`);
};

//# sourceMappingURL=handle-message.js.map
=======
<<<<<<< HEAD

  throw new Error(`Unknown internal parser worker action: ${action}`);
};
=======
  throw new Error(`Unknown internal parser worker action: ${action}`);
};

//# sourceMappingURL=handle-message.js.map
>>>>>>> zen
>>>>>>> ede5c2d510e1c4029dfffa203387bb3f20d74fc6
